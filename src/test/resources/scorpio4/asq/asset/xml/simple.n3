# W3C - RDF & RDFS
@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: 		<http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: 		<http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: 		<http://www.w3.org/2001/XMLSchema#>.
@prefix mime: 		<http://www.iana.org/assignments/media-types/>.
@prefix eg: 		<http://example.org/>.

# Scorpio4 Active Vocabularies
@prefix flo: 		<http://scorpio4.com/v1/vocab/flo/>.
@prefix bean: 		<http://scorpio4.com/v1/vocab/bean/>.
@prefix asq: 		<http://scorpio4.com/v1/vocab/asq/>.
@prefix core: 		<http://scorpio4.com/v1/vocab/>.

# ----------------------------------------------------------------------------------------
@prefix : 			<urn:scorpio4tests:asq:asset:xml:simple:>.

:	a				eg:Example, core:Recipe;
	rdfs:label		"ASQ: Generate Simple XML";
	rdfs:comment	"";
.
# ----------------------------------------------------------------------------------------

# Define the Asset Generator
:
	asq:asset		<urn:scorpio4tests:asq:asset:xml:simple>;

# Optionally, a static template can be used. It will be bound to an Asset for processing.
#	asq:template	"<recipe id='${it.this}'>${it.label}</recipe>"^^<http://www.iana.org/assignments/media-types/application/xml>;

# The selector. Each instance of the result set will instantiate an Asset template.
	asq:where [
		asq:this	:this;
# Support SPARQL 1.1 Property Paths
		asq:path	"rdf:type/rdfs:subClassOf*"^^asq:PathLiteral;
		asq:that	core:Recipe;
	];
	asq:where [
		asq:this	:this;
		asq:has		rdfs:label;
		asq:that	:label;
	];
.