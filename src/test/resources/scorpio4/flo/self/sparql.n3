# W3C - RDF & RDFS
@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: 		<http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: 		<http://www.w3.org/2004/02/skos/core#> .
@prefix eg: 		<http://example.org/>.

# Scorpio4 Active Vocabularies
@prefix flo: 		<http://scorpio4.com/v1/vocab/flo/>.
@prefix bean: 		<http://scorpio4.com/v1/vocab/bean/>.
@prefix asq: 		<http://scorpio4.com/v1/vocab/asq/>.
@prefix core: 		<http://scorpio4.com/v1/vocab/>.

# ----------------------------------------------------------------------------------------

@prefix : 			<urn:scorpio4tests:flo:self:sparql:>.

:	a				eg:Example;
	rdfs:label		"FLO: SPARQL Example";
	rdfs:comment	"";
.
# ----------------------------------------------------------------------------------------

# Declare a FLO pipeline
# 1. retrieve SPARQL query as a named Asset
# 2. execute SPARQL query using Engine's default repository
# 3. save the result into the ./temp.test/ directory

: flo:to (
	<self:asset:urn:scorpio4tests:flo:sparql>
	<sparql:construct:self?outputType=JSON-LD>
	[ flo:io <file://temp.test/flo/self/sparql/> ]
).

# Define the SPARQL query as named Asset
<urn:scorpio4tests:flo:sparql>
	core:hasAsset			"CONSTRUCT { ?s ?p ?o } WHERE {?s ?p ?o }"^^<http://www.iana.org/assignments/media-types/application/x-sparql-query>;
.


# Wire-up to Test Engine

<urn:scorpio4tests:>
	flo:from			:;
.
