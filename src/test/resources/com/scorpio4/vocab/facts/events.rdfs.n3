@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:		<http://www.w3.org/2002/07/owl#> .
@prefix dc:			<http://purl.org/dc/elements/1.1/> .
@prefix eg:			<http://www.example.org/> .
@prefix xsd: 		<http://www.w3.org/2001/XMLSchema#>.

@prefix iq: 		<urn:com.scorpio4:>.
@prefix fact:		<urn:com.scorpio4:fact:>.
@prefix : 			<urn:com.scorpio4:fact:>.

#
# Behaviours (Events)
#
:onCreate
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"on create";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.

:onBeforeCreate
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"before creating";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onRead
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"on read";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onBeforeRead
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"before reading";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.

:onUpdate
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"on update";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onBeforeUpdate
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"before updating";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.

:onDelete
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"on delete";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onBeforeDelete
	rdfs:subPropertyOf	iq:triggers;
	rdfs:isDefinedBy	:;
	rdfs:label 			"before deleting";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.

:onChange
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on change";
	rdfs:comment		"(model, options) — when a model's attributes have changed";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onChangeField
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on change field";
	rdfs:comment		"(model, value, options) — when a specific attribute has been updated";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onDestroy
	rdfs:subPropertyOf	:onDelete;
	rdfs:label			"on destroy";
	rdfs:comment		"(model, collection, options) — when a model is destroyed";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onRequest
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on request";
	rdfs:comment		"(model, xhr, options) — when a model (or collection) has started a request to the server";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onSync
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on sync";
	rdfs:comment		"(model, resp, options) — when a model (or collection) has been successfully synced with the server";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onError
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on error";
	rdfs:comment		"(model, xhr, options) — when a model's save call fails on the server";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onInvalid
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on invalid";
	rdfs:comment		"(model, error, options) — when a model's validation fails on the client";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.

#
# Collection Events
#

:onAdd
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on add";
	rdfs:comment		"(model, collection, options) — when a model is added to a collection";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onRemove
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on remove";
	rdfs:comment		"(model, collection, options) — when a model is removed from a collection";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onReset
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on reset";
	rdfs:comment		"(collection, options) — when the collection's entire contents have been replaced";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onSort
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on sort";
	rdfs:comment		"(collection, options) — when the collection has been re-sorted";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onRoute
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on route";
	rdfs:comment		"(router, route, params) — Fired by history (or router) when any route has been matched";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
:onAll
	rdfs:subPropertyOf	iq:triggers;
	rdfs:label			"on all";
	rdfs:comment		"this special event fires for any triggered event, passing the event name as the first argument";
	rdfs:domain			:Model;
	rdfs:range  		iq:Behaviour;
.
