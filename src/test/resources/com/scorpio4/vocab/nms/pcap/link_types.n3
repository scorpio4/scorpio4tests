@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:		<http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:		<http://www.w3.org/2002/07/owl#> .
@prefix dc:			<http://purl.org/dc/elements/1.1/> .
@prefix eg:			<http://www.example.org/> .
@prefix xsd: 		<http://www.w3.org/2001/XMLSchema#>.

@prefix iana:     <http://www.iana.org/assignments/port-numbers/#>.
@prefix osi:      <http://skms.info/ontology/osi/model/>.
@prefix oui:      <http://standards.ieee.org/develop/regauth/oui/oui#>.

@prefix pcap:		<urn:com.scorpio4:nms:pcap:>.
@prefix : 			<urn:com.scorpio4:nms:pcap:>.

pcap:LinkType
    rdfs:label "Link Type";
    rdfs:comment "Link Layer Type";
.

pcap:LinkType_0
    a         pcap:LinkType;
    rdfs:label "NULL";
    rdfs:comment "BSD loopback encapsulation; the link layer header is a 4-byte field, in host byte order, containing a PF_ value from socket.h for the network-layer protocol of the packet.";
    pcap:dlt "NULL";
.
pcap:LinkType_1
    a         pcap:LinkType;
    rdfs:label "ETHERNET";
    rdfs:comment "IEEE 802.3 Ethernet (10Mb, 100Mb, 1000Mb, and up); the 10MB in the DLT_ name is historical.";
    pcap:dlt "EN10MB";
.
pcap:LinkType_3
    a         pcap:LinkType;
    rdfs:label "AX25";
    rdfs:comment "AX.25 packet, with nothing preceding it.";
    pcap:dlt "AX25";
.
pcap:LinkType_6
    a         pcap:LinkType;
    rdfs:label "IEEE802_5";
    rdfs:comment "IEEE 802.5 Token Ring; the IEEE802, without _5, in the DLT_ name is historical.";
    pcap:dlt "IEEE802";
.
pcap:LinkType_7
    a         pcap:LinkType;
    rdfs:label "ARCNET_BSD";
    rdfs:comment "ARCNET Data Packets, as described by the ARCNET Trade Association standard ATA 878.1-1999, but without the Starting Delimiter, Information Length, or Frame Check Sequence fields, and with only the first ISU of the Destination Identifier. For most packet types, ARCNET Trade Association draft standard ATA 878.2 is also used. See also RFC 1051 and RFC 1201; for RFC 1051 frames, ATA 878.2 is not used.";
    pcap:dlt "ARCNET";
.
pcap:LinkType_8
    a         pcap:LinkType;
    rdfs:label "SLIP";
    rdfs:comment "SLIP, encapsulated with a LINKTYPE_SLIP header.";
    pcap:dlt "SLIP";
.
pcap:LinkType_9
    a         pcap:LinkType;
    rdfs:label "PPP";
    rdfs:comment "PPP, as per RFC 1661 and RFC 1662; if the first 2 bytes are 0xff and 0x03, it's PPP in HDLC-like framing, with the PPP header following those two bytes, otherwise it's PPP without framing, and the packet begins with the PPP header.";
    pcap:dlt "PPP";
.
pcap:LinkType_10
    a         pcap:LinkType;
    rdfs:label "FDDI";
    rdfs:comment "FDDI, as specified by ANSI INCITS 239-1994.";
    pcap:dlt "FDDI";
.
pcap:LinkType_50
    a         pcap:LinkType;
    rdfs:label "PPP_HDLC";
    rdfs:comment "PPP in HDLC-like framing, as per RFC 1662, or Cisco PPP with HDLC framing, as per section 4.3.1 of RFC 1547; the first byte will be 0xFF for PPP in HDLC-like framing, and will be 0x0F or 0x8F for Cisco PPP with HDLC framing.";
    pcap:dlt "PPP_SERIAL";
.
pcap:LinkType_51
    a         pcap:LinkType;
    rdfs:label "PPP_ETHER";
    rdfs:comment "PPPoE; the packet begins with a PPPoE header, as per RFC 2516.";
    pcap:dlt "PPP_ETHER";
.
pcap:LinkType_100
    a         pcap:LinkType;
    rdfs:label "ATM_RFC1483";
    rdfs:comment "RFC 1483 LLC/SNAP-encapsulated ATM; the packet begins with an IEEE 802.2 LLC header.";
    pcap:dlt "ATM_RFC1483";
.
pcap:LinkType_101
    a         pcap:LinkType;
    rdfs:label "RAW";
    rdfs:comment "Raw IP; the packet begins with an IPv4 or IPv6 header, with the \"version\" field of the header indicating whether it's an IPv4 or IPv6 header.";
    pcap:dlt "RAW";
.
pcap:LinkType_104
    a         pcap:LinkType;
    rdfs:label "C_HDLC";
    rdfs:comment "Cisco PPP with HDLC framing, as per section 4.3.1 of RFC 1547.";
    pcap:dlt "C_HDLC";
.
pcap:LinkType_105
    a         pcap:LinkType;
    rdfs:label "IEEE802_11";
    rdfs:comment "IEEE 802.11 wireless LAN.";
    pcap:dlt "IEEE802_11";
.
pcap:LinkType_107
    a         pcap:LinkType;
    rdfs:label "FRELAY";
    rdfs:comment "Frame Relay";
    pcap:dlt "FRELAY";
.
pcap:LinkType_108
    a         pcap:LinkType;
    rdfs:label "LOOP";
    rdfs:comment "OpenBSD loopback encapsulation; the link-layer header is a 4-byte field, in network byte order, containing a PF_ value from OpenBSD's socket.h for the network-layer protocol of the packet.";
    pcap:dlt "LOOP";
.
pcap:LinkType_113
    a         pcap:LinkType;
    rdfs:label "LINUX_SLL";
    rdfs:comment "Linux \"cooked\" capture encapsulation.";
    pcap:dlt "LINUX_SLL";
.
pcap:LinkType_114
    a         pcap:LinkType;
    rdfs:label "LTALK";
    rdfs:comment "Apple LocalTalk; the packet begins with an AppleTalk LocalTalk Link Access Protocol header, as described in chapter 1 of Inside AppleTalk, Second Edition.";
    pcap:dlt "LTALK";
.
pcap:LinkType_117
    a         pcap:LinkType;
    rdfs:label "PFLOG";
    rdfs:comment "OpenBSD pflog; the link-layer header contains a \"struct pfloghdr\" structure, as defined by the host on which the file was saved. (This differs from operating system to operating system and release to release; there is nothing in the file to indicate what the layout of that structure is.)";
    pcap:dlt "PFLOG";
.
pcap:LinkType_119
    a         pcap:LinkType;
    rdfs:label "IEEE802_11_PRISM";
    rdfs:comment "Prism monitor mode information followed by an 802.11 header.";
    pcap:dlt "PRISM_HEADER";
.
pcap:LinkType_122
    a         pcap:LinkType;
    rdfs:label "IP_OVER_FC";
    rdfs:comment "RFC 2625 IP-over-Fibre Channel, with the link-layer header being the Network_Header as described in that RFC.";
    pcap:dlt "IP_OVER_FC";
.
pcap:LinkType_123
    a         pcap:LinkType;
    rdfs:label "SUNATM";
    rdfs:comment "ATM traffic, encapsulated as per the scheme used by SunATM devices.";
    pcap:dlt "SUNATM";
.
pcap:LinkType_127
    a         pcap:LinkType;
    rdfs:label "IEEE802_11_RADIOTAP";
    rdfs:comment "Radiotap link-layer information followed by an 802.11 header.";
    pcap:dlt "IEEE802_11_RADIO";
.
pcap:LinkType_129
    a         pcap:LinkType;
    rdfs:label "ARCNET_LINUX";
    rdfs:comment "ARCNET Data Packets, as described by the ARCNET Trade Association standard ATA 878.1-1999, but without the Starting Delimiter, Information Length, or Frame Check Sequence fields, with only the first ISU of the Destination Identifier, and with an extra two-ISU \"offset\" field following the Destination Identifier. For most packet types, ARCNET Trade Association draft standard ATA 878.2 is also used; however, no exception frames are supplied, and reassembled frames, rather than fragments, are supplied. See also RFC 1051 and RFC 1201; for RFC 1051 frames, ATA 878.2 is not used.";
    pcap:dlt "ARCNET_LINUX";
.
pcap:LinkType_138
    a         pcap:LinkType;
    rdfs:label "APPLE_IP_OVER_IEEE1394";
    rdfs:comment "Apple IP-over-IEEE 1394 cooked header.";
    pcap:dlt "APPLE_IP_OVER_IEEE1394";
.
pcap:LinkType_139
    a         pcap:LinkType;
    rdfs:label "MTP2_WITH_PHDR";
    rdfs:comment "Signaling System 7 Message Transfer Part Level 2, as specified by ITU-T Recommendation Q.703, preceded by a pseudo-header.";
    pcap:dlt "MTP2_WITH_PHDR";
.
pcap:LinkType_140
    a         pcap:LinkType;
    rdfs:label "MTP2";
    rdfs:comment "Signaling System 7 Message Transfer Part Level 2, as specified by ITU-T Recommendation Q.703.";
    pcap:dlt "MTP2";
.
pcap:LinkType_141
    a         pcap:LinkType;
    rdfs:label "MTP3";
    rdfs:comment "Signaling System 7 Message Transfer Part Level 3, as specified by ITU-T Recommendation Q.704, with no MTP2 header preceding the MTP3 packet.";
    pcap:dlt "MTP3";
.
pcap:LinkType_142
    a         pcap:LinkType;
    rdfs:label "SCCP";
    rdfs:comment "Signaling System 7 Signalling Connection Control Part, as specified by ITU-T Recommendation Q.711, ITU-T Recommendation Q.712, ITU-T Recommendation Q.713, and ITU-T Recommendation Q.714, with no MTP3 or MTP2 headers preceding the SCCP packet.";
    pcap:dlt "SCCP";
.
pcap:LinkType_143
    a         pcap:LinkType;
    rdfs:label "DOCSIS";
    rdfs:comment "DOCSIS MAC frames, as described by the DOCSIS 3.0 MAC and Upper Layer Protocols Interface Specification.";
    pcap:dlt "DOCSIS";
.
pcap:LinkType_144
    a         pcap:LinkType;
    rdfs:label "LINUX_IRDA";
    rdfs:comment "Linux-IrDA packets, with a LINKTYPE_LINUX_IRDA header, with the payload for IrDA frames beginning with by the IrLAP header as defined by IrDA Data Specifications, including the IrDA Link Access Protocol specification.";
    pcap:dlt "LINUX_IRDA";
.
pcap:LinkType_147
    a         pcap:LinkType;
    rdfs:label "PRIVATE";
    rdfs:comment "Reserved for private use";
    pcap:dlt "USER0-DLT_USER15";
.
#pcap:LinkType_147-162
#    a         pcap:LinkType;
#    rdfs:label "PRIVATE";
#    rdfs:comment "Reserved for private use";
#    pcap:dlt "USER0-DLT_USER15";
#.

pcap:LinkType_163
    a         pcap:LinkType;
    rdfs:label "IEEE802_11_AVS";
    rdfs:comment "AVS monitor mode information followed by an 802.11 header.";
    pcap:dlt "IEEE802_11_RADIO_AVS";
.
pcap:LinkType_165
    a         pcap:LinkType;
    rdfs:label "BACNET_MS_TP";
    rdfs:comment "BACnet MS/TP frames, as specified by section 9.3 MS/TP Frame Format of ANSI/ASHRAE Standard 135, BACnetÂ® - A Data Communication Protocol for Building Automation and Control Networks, including the preamble and, if present, the Data CRC.";
    pcap:dlt "BACNET_MS_TP";
.
pcap:LinkType_166
    a         pcap:LinkType;
    rdfs:label "PPP_PPPD";
    rdfs:comment "PPP in HDLC-like encapsulation, but with the 0xff address byte replaced by a direction indication - 0x00 for incoming and 0x01 for outgoing.";
    pcap:dlt "PPP_PPPD";
.
pcap:LinkType_169
    a         pcap:LinkType;
    rdfs:label "GPRS_LLC";
    rdfs:comment "General Packet Radio Service Logical Link Control, as defined by 3GPP TS 04.64.";
    pcap:dlt "GPRS_LLC";
.
pcap:LinkType_177
    a         pcap:LinkType;
    rdfs:label "LINUX_LAPD";
    rdfs:comment "Link Access Procedures on the D Channel (LAPD) frames, as specified by ITU-T Recommendation Q.920 and ITU-T Recommendation Q.921, captured via vISDN, with a LINKTYPE_LINUX_LAPD header, followed by the Q.921 frame, starting with the address field.";
    pcap:dlt "LINUX_LAPD";
.
pcap:LinkType_187
    a         pcap:LinkType;
    rdfs:label "BLUETOOTH_HCI_H4";
    rdfs:comment "Bluetooth HCI UART transport layer; the frame contains an HCI packet indicator byte, as specified by Volume 4, part A of the Core Version 4.0 of the Bluetooth specifications, followed by an HCI packet of the specified packet type, as specified by Volume 2, Part E of the same document.";
    pcap:dlt "BLUETOOTH_HCI_H4";
.
pcap:LinkType_189
    a         pcap:LinkType;
    rdfs:label "USB_LINUX";
    rdfs:comment "USB packets, beginning with a Linux USB header, as specified by the struct usbmon_packet in the Documentation/usb/usbmon.txt file in the Linux source tree. Only the first 48 bytes of that header are present. All fields in the header are in the host byte order for the pcap file, as specified by the file's magic number, or for the section of the pcap-ng file, as specified by the Section Header Block.";
    pcap:dlt "USB_LINUX";
.
pcap:LinkType_192
    a         pcap:LinkType;
    rdfs:label "PPI";
    rdfs:comment "Per-Packet Information information, as specified by the Per-Packet Information Header Specification, followed by a packet with the LINKTYPE_ value specified by the pph_dlt field of that header.";
    pcap:dlt "PPI";
.
pcap:LinkType_195
    a         pcap:LinkType;
    rdfs:label "IEEE802_15_4";
    rdfs:comment "IEEE 802.15.4 wireless Personal Area Network, with each packet having the FCS at the end of the frame.";
    pcap:dlt "IEEE802_15_4";
.
pcap:LinkType_196
    a         pcap:LinkType;
    rdfs:label "SITA";
    rdfs:comment "Various link-layer types, with a pseudo-header, for SITA.";
    pcap:dlt "SITA";
.
pcap:LinkType_197
    a         pcap:LinkType;
    rdfs:label "ERF";
    rdfs:comment "Various link-layer types, with a pseudo-header, for Endace DAG cards; encapsulates Endace ERF records.";
    pcap:dlt "ERF";
.
pcap:LinkType_201
    a         pcap:LinkType;
    rdfs:label "BLUETOOTH_HCI_H4_WITH_PHDR";
    rdfs:comment "Bluetooth HCI UART transport layer; the frame contains a 4-byte direction field, in network byte order (big-endian), the low-order bit of which is set if the frame was sent from the host to the controller and clear if the frame was received by the host from the controller, followed by an HCI packet indicator byte, as specified by Volume 4, part A of the Core Version 4.0 of the Bluetooth specifications, followed by an HCI packet of the specified packet type, as specified by Volume 2, Part E of the same document.";
    pcap:dlt "BLUETOOTH_HCI_H4_WITH_PHDR";
.
pcap:LinkType_202
    a         pcap:LinkType;
    rdfs:label "AX25_KISS";
    rdfs:comment "AX.25 packet, with a 1-byte KISS header containing a type indicator.";
    pcap:dlt "AX25_KISS";
.
pcap:LinkType_203
    a         pcap:LinkType;
    rdfs:label "LAPD";
    rdfs:comment "Link Access Procedures on the D Channel (LAPD) frames, as specified by ITU-T Recommendation Q.920 and ITU-T Recommendation Q.921, starting with the address field, with no pseudo-header.";
    pcap:dlt "LAPD";
.
pcap:LinkType_204
    a         pcap:LinkType;
    rdfs:label "PPP_WITH_DIR";
    rdfs:comment "PPP, as per RFC 1661 and RFC 1662, preceded with a one-byte pseudo-header with a zero value meaning \"received by this host\" and a non-zero value meaning \"sent by this host\".";
    pcap:dlt "PPP_WITH_DIR";
.
pcap:LinkType_205
    a         pcap:LinkType;
    rdfs:label "C_HDLC_WITH_DIR";
    rdfs:comment "Cisco PPP with HDLC framing, as per section 4.3.1 of RFC 1547, preceded with a one-byte pseudo-header with a zero value meaning \"received by this host\" and a non-zero value meaning \"sent by this host\".";
    pcap:dlt "C_HDLC_WITH_DIR";
.
pcap:LinkType_206
    a         pcap:LinkType;
    rdfs:label "FRELAY_WITH_DIR";
    rdfs:comment "Frame Relay, preceded with a one-byte pseudo-header with a zero value meaning \"received by this host\" and a non-zero value meaning \"sent by this host\".";
    pcap:dlt "FRELAY_WITH_DIR";
.
pcap:LinkType_209
    a         pcap:LinkType;
    rdfs:label "IPMB_LINUX";
    rdfs:comment "IPMB over an I2C circuit, with a Linux-specific pseudo-header.";
    pcap:dlt "IPMB_LINUX";
.
pcap:LinkType_215
    a         pcap:LinkType;
    rdfs:label "IEEE802_15_4_NONASK_PHY";
    rdfs:comment "IEEE 802.15.4 wireless Personal Area Network, with each packet having the FCS at the end of the frame, and with the PHY-level data for non-ASK PHYs (4 octets of 0 as preamble, one octet of SFD, one octet of frame length + reserved bit) preceding the MAC-layer data (starting with the frame control field).";
    pcap:dlt "IEEE802_15_4_NONASK_PHY";
.
pcap:LinkType_220
    a         pcap:LinkType;
    rdfs:label "USB_LINUX_MMAPPED";
    rdfs:comment "USB packets, beginning with a Linux USB header, as specified by the struct usbmon_packet in the Documentation/usb/usbmon.txt file in the Linux source tree. All 64 bytes of the header are present. All fields in the header are in the host byte order for the pcap file, as specified by the file's magic number, or for the section of the pcap-ng file, as specified by the Section Header Block. For isochronous transfers, the ndesc field specifies the number of isochronous descriptors that follow.";
    pcap:dlt "USB_LINUX_MMAPPED";
.
pcap:LinkType_224
    a         pcap:LinkType;
    rdfs:label "FC_2";
    rdfs:comment "Fibre Channel FC-2 frames, beginning with a Frame_Header.";
    pcap:dlt "FC_2";
.
pcap:LinkType_225
    a         pcap:LinkType;
    rdfs:label "FC_2_WITH_FRAME_DELIMS";
    rdfs:comment "Fibre Channel FC-2 frames, beginning an encoding of the SOF, followed by a Frame_Header, and ending with an encoding of the SOF.";
    pcap:dlt "FC_2_WITH_FRAME_DELIMS";
.
pcap:LinkType_226
    a         pcap:LinkType;
    rdfs:label "IPNET";
    rdfs:comment "Solaris ipnet pseudo-header, followed by an IPv4 or IPv6 datagram.";
    pcap:dlt "IPNET";
.
pcap:LinkType_227
    a         pcap:LinkType;
    rdfs:label "CAN_SOCKETCAN";
    rdfs:comment "CAN (Controller Area Network) frames, with a pseudo-header as supplied by Linux SocketCAN.";
    pcap:dlt "CAN_SOCKETCAN";
.
pcap:LinkType_228
    a         pcap:LinkType;
    rdfs:label "IPV4";
    rdfs:comment "Raw IPv4; the packet begins with an IPv4 header.";
    pcap:dlt "IPV4";
.
pcap:LinkType_229
    a         pcap:LinkType;
    rdfs:label "IPV6";
    rdfs:comment "Raw IPv6; the packet begins with an IPv6 header.";
    pcap:dlt "IPV6";
.
pcap:LinkType_230
    a         pcap:LinkType;
    rdfs:label "IEEE802_15_4_NOFCS";
    rdfs:comment "IEEE 802.15.4 wireless Personal Area Network, without the FCS at the end of the frame.";
    pcap:dlt "IEEE802_15_4_NOFCS";
.
pcap:LinkType_231
    a         pcap:LinkType;
    rdfs:label "DBUS";
    rdfs:comment "Raw D-Bus messages, starting with the endianness flag, followed by the message type, etc., but without the authentication handshake before the message sequence.";
    pcap:dlt "DBUS";
.
pcap:LinkType_235
    a         pcap:LinkType;
    rdfs:label "DVB_CI";
    rdfs:comment "DVB-CI (DVB Common Interface for communication between a PC Card module and a DVB receiver), with the message format specified by the PCAP format for DVB-CI specification.";
    pcap:dlt "DVB_CI";
.
pcap:LinkType_236
    a         pcap:LinkType;
    rdfs:label "MUX27010";
    rdfs:comment "Variant of 3GPP TS 27.010 multiplexing protocol (similar to, but not the same as, 27.010).";
    pcap:dlt "MUX27010";
.
pcap:LinkType_237
    a         pcap:LinkType;
    rdfs:label "STANAG_5066_D_PDU";
    rdfs:comment "D_PDUs as described by NATO standard STANAG 5066, starting with the synchronization sequence, and including both header and data CRCs. The current version of STANAG 5066 is backwards-compatible with the 1.0.2 version, although newer versions are classified.";
    pcap:dlt "STANAG_5066_D_PDU";
.
pcap:LinkType_239
    a         pcap:LinkType;
    rdfs:label "NFLOG";
    rdfs:comment "Linux netlink NETLINK NFLOG socket log messages.";
    pcap:dlt "NFLOG";
.
pcap:LinkType_240
    a         pcap:LinkType;
    rdfs:label "NETANALYZER";
    rdfs:comment "Pseudo-header for Hilscher Gesellschaft fÃ¼r Systemautomation mbH netANALYZER devices, followed by an Ethernet frame, beginning with the MAC header and ending with the FCS.";
    pcap:dlt "NETANALYZER";
.
pcap:LinkType_241
    a         pcap:LinkType;
    rdfs:label "NETANALYZER_TRANSPARENT";
    rdfs:comment "Pseudo-header for Hilscher Gesellschaft fÃ¼r Systemautomation mbH netANALYZER devices, followed by an Ethernet frame, beginning with the preamble, SFD, and MAC header, and ending with the FCS.";
    pcap:dlt "NETANALYZER_TRANSPARENT";
.
pcap:LinkType_242
    a         pcap:LinkType;
    rdfs:label "IPOIB";
    rdfs:comment "IP-over-InfiniBand, as specified by RFC 4391 section 6.";
    pcap:dlt "IPOIB";
.
pcap:LinkType_243
    a         pcap:LinkType;
    rdfs:label "MPEG_2_TS";
    rdfs:comment "MPEG-2 Transport Stream transport packets, as specified by ISO 13818-1/ITU-T Recommendation H.222.0 (see table 2-2 of section 2.4.3.2 \"Transport Stream packet layer\").";
    pcap:dlt "MPEG_2_TS";
.
pcap:LinkType_244
    a         pcap:LinkType;
    rdfs:label "NG40";
    rdfs:comment "Pseudo-header for ng4T GmbH's UMTS Iub/Iur-over-ATM and Iub/Iur-over-IP format as used by their ng40 protocol tester, followed by frames for the Frame Protocol as specified by 3GPP TS 25.427 for dedicated channels and 3GPP TS 25.435 for common/shared channels in the case of ATM AAL2 or UDP traffic, by SSCOP packets as specified by ITU-T Recommendation Q.2110 for ATM AAL5 traffic, and by NBAP packets for SCTP traffic.";
    pcap:dlt "NG40";
.
pcap:LinkType_245
    a         pcap:LinkType;
    rdfs:label "NFC_LLCP";
    rdfs:comment "Pseudo-header for NFC LLCP packet captures, followed by frame data for the LLCP Protocol as specified by NFCForum-TS-LLCP_1.1.";
    pcap:dlt "NFC_LLCP";
.
pcap:LinkType_247
    a         pcap:LinkType;
    rdfs:label "INFINIBAND";
    rdfs:comment "Raw InfiniBand frames, starting with the Local Routing Header, as specified in Chapter 5 \"Data packet format\" of InfiniBandâ¢ Architectural Specification Release 1.2.1 Volume 1 - General Specifications.";
    pcap:dlt "INFINIBAND";
.
pcap:LinkType_248
    a         pcap:LinkType;
    rdfs:label "SCTP";
    rdfs:comment "SCTP packets, as defined by RFC 4960, with no lower-level protocols such as IPv4 or IPv6.";
    pcap:dlt "SCTP";
.
pcap:LinkType_249
    a         pcap:LinkType;
    rdfs:label "USBPCAP";
    rdfs:comment "USB packets, beginning with a USBPcap header.";
    pcap:dlt "USBPCAP";
.
pcap:LinkType_250
    a         pcap:LinkType;
    rdfs:label "RTAC_SERIAL";
    rdfs:comment "Serial-line packet header for the Schweitzer Engineering Laboratories \"RTAC\" product, followed by a payload for one of a number of industrial control protocols.";
    pcap:dlt "RTAC_SERIAL";
.
pcap:LinkType_251
    a         pcap:LinkType;
    rdfs:label "BLUETOOTH_LE_LL";
    rdfs:comment "Bluetooth Low Energy air interface Link Layer packets, in the format described in section 2.1 \"PACKET FORMAT\" of volume 6 of the Bluetooth Specification Version 4.0 (see PDF page 2200), but without the Preamble.";
    pcap:dlt "BLUETOOTH_LE_LL";
.