@prefix rdf:		<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	 	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:		<http://www.w3.org/2002/07/owl#> .
@prefix dc:		 	<http://purl.org/dc/elements/1.1/> .
@prefix eg:		 	<http://www.eg.org/> .
@prefix xsd: 		<http://www.w3.org/2001/XMLSchema#>.

@prefix valid:		<urn:com.scorpio4:validate:>.
@prefix sdk:		<urn:com.scorpio4:sdk:>.
@prefix iq: 		<urn:com.scorpio4:>.

@prefix :			<urn:com.scorpio4:validate:>.

:
	a 					owl:Ontology;
	owl:versionInfo		"0.3";
	rdfs:label			"Validation";
	dc:title			"Data Validation";
	rdfs:comment		"Vocabulary for describing data entry validation expressions.";
	dc:created			"2011-07-24"^^xsd:date;
	dc:modified			"2012-05-04"^^xsd:date;
	dc:license			<http://www.opendatacommons.org/licenses/pddl/1.0/>
.
# Validation

:Data
	rdfs:isDefinedBy	:;
	rdfs:label			"Valid Data";
	rdfs:comment		"Data to be validated";
	rdfs:range			xsd:string;
.

# Regular Expression Validation Rules


:address				rdfs:subClassOf :alphanumeric.
:text					rdfs:subClassOf :alphanumeric.

:urn
	rdfs:subClassOf		:Data;
	rdfs:label			"URN";
	rdfs:comment 		"Used to check if a value conforms to a URN (rfc2141)";
	:pattern 			"^(\\d{4}-){3}\\d{4}$|^(\\d{4} ){3}\\d{4}$|^\\d{16}$";
	dc:link 			<http://www.ietf.org/rfc/rfc2141.txt>;
	dc:creator 			<http://stackoverflow.com/questions/5492885/is-there-a-java-library-that-validates-urns>;
.

:email
	rdfs:subClassOf		:Data;
	rdfs:label			"Email (TODO)";
	rdfs:comment 		"Used to validate Email Addresses";
	:pattern 			"$";
.

:http
	rdfs:subClassOf		:Data;
	rdfs:label			"HTTP URL (TODO)";
	rdfs:comment 		"Used to validate website addresses (HTTP and HTTPS)";
	:pattern 			"^(http://)(https://)$";
.

:numeric
	rdfs:subClassOf		:Data;
	rdfs:label			"Numeric (TODO)";
	rdfs:comment 		"Used to check if a value is numeric (including decimal)";
	:pattern 			"^(\\d{4}-){3}\\d{4}$|^(\\d{4} ){3}\\d{4}$|^\\d{16}$";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=529>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=25077cbf-d24a-4202-8b29-00ce9db91ebc>;
.

:credit_card_simple
	rdfs:subClassOf		:Data;
	rdfs:label			"Credit Card (Simple)";
	rdfs:comment 		"Used to validate Credit Card numbers, Checks if it contains 16 numbers in groups of 4 separated by -, ,or nothing";
	:pattern 			"^(\\d{4}-){3}\\d{4}$|^(\\d{4} ){3}\\d{4}$|^\\d{16}$";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=529>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=25077cbf-d24a-4202-8b29-00ce9db91ebc>;
.

:alphaumeric
	rdfs:subClassOf		:Data;
	rdfs:label 			"Alphanumeric";
	:pattern 			"^[a-zA-Z0-9]+$";
	rdfs:comment 		"Checks if value contains only lower or uppercase letters or numbers.";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=529>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=25077cbf-d24a-4202-8b29-00ce9db91ebc>;
.

:telephone
	rdfs:subClassOf		:Data;
	rdfs:label 			"Telephone Number";
	:pattern 			"^(?:(?:[\\+]?(?<CountryCode>[\\d]{1,3}(?:[ ]+|[\\-.])))?[(]?(?<AreaCode>[\\d]{3})[\\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z2-9][a-zA-Z0-9 \\-.]{6,})(?:(?:[ ]+|[xX]|(i:ext[\\.]?)){1,2}(?<Ext>[\\d]{1,5}))?$";
	rdfs:comment 		"This allows the formatting of most phone numbers. eg: 1-800-DISCOVER | (610) 310-5555 x5555 | 533-1123";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=688>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=e7f8a3ee-b325-405a-a13a-58f44b002aa6>;
.

:usa_telephone
	rdfs:subClassOf		:Data;
	rdfs:label 			"Telephone Number (USA)";
	:pattern 			"^(?:(?:[\\+]?(?<CountryCode>[\\d]{1,3}(?:[ ]+|[\\-.])))?[(]?(?<AreaCode>[\\d]{3})[\\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z2-9][a-zA-Z0-9 \\-.]{6,})(?:(?:[ ]+|[xX]|(i:ext[\\.]?)){1,2}(?<Ext>[\\d]{1,5}))?$";
	rdfs:comment 		"This allows the formatting of most phone numbers. eg: 1-800-DISCOVER | (610) 310-5555 x5555 | 533-1123";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=688>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=e7f8a3ee-b325-405a-a13a-58f44b002aa6>;
.

:file_extension
	rdfs:subClassOf		:Data;
	rdfs:label 			"File Extension";
	:pattern 			"\\.([^\\.]+)";
	rdfs:comment 		"Matches the characters after the final (.) dot";
	dc:link 			<http://regexlib.com/REDetails.aspx?regexp_id=688>;
	dc:creator 			<http://regexlib.com/UserPatterns.aspx?authorId=e7f8a3ee-b325-405a-a13a-58f44b002aa6>;
.
